name: C Project CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libcurl4-openssl-dev \
          libjson-c-dev \
          libgtest-dev \
          libgmock-dev \
          gcc \
          g++ \
          git \
          pkg-config \
          libssl-dev

    - name: Update submodule (open62541)
      run: |
        git submodule update --init --recursive

    - name: Build open62541
      run: |
        cd open62541
        mkdir -p build
        cd build
        cmake ..
        make
        sudo make install

    - name: Install cJSON
      run: |
        git clone https://github.com/DaveGamble/cJSON.git
        cd cJSON
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
        sudo ldconfig

    - name: Build project
      run: |
        touch .env
        make build

    - name: Run tests
      run: |
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        make test
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opc-ua-binaries
        path: |
          build/server_opc_ua
          build/client_opc_ua
          build/tests/run_tests

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libcurl4-openssl-dev \
          libjson-c-dev \
          libgtest-dev \
          libgmock-dev \
          gcc \
          g++ \
          git \
          pkg-config \
          libssl-dev

    - name: Install cJSON
      run: |
        git clone https://github.com/DaveGamble/cJSON.git
        cd cJSON
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
        sudo ldconfig

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: opc-ua-binaries

    - name: Run tests
      run: |
        sudo chmod +x ./tests/run_tests
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        ./tests/run_tests

    - name: Generate test report
      run: |
        .tests/run_tests --gtest_output=xml:test_results.xml

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test_results.xml

